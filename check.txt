function sendFormData(event) {
    event.preventDefault();
    
    var formData = new FormData(document.getElementById("yourFormId"));
    
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "../submit.php", true);
    
    // Add this critical line to fix the issue:
    xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    
    xhr.onload = function() {
        // Process response...
    };
    
    xhr.send(formData);
}


orr

<?php
include('../config/db_connection.php');

header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: POST, GET, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, X-Requested-With");

// Skip AJAX check and just process POST requests with 'project' field
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['project'])) {
    header('Content-Type: application/json');
    
    // Process form data...
    // Your existing code here...
    
    echo json_encode([
        'status' => 'success',
        'message' => "Thanks, $name. Your request for '$project' was received."
    ]);
    exit;
}

// Handle invalid requests
http_response_code(400);
header('Content-Type: application/json');
echo json_encode(['status' => 'error', 'message' => 'Invalid request']);
exit;
?>



<?php
// Modified submit.php that works with or without X-Requested-With header
include('../config/db_connection.php');

header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: POST, GET, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, X-Requested-With");

// Check if it's a form submission - focused on POST with project field
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['project'])) {
    // Always set JSON content type for form submissions
    header('Content-Type: application/json');
    
    // Process the form data
    $project = $conn->real_escape_string($_POST['project']);
    $name = $conn->real_escape_string($_POST['name'] ?? '');
    $email = $conn->real_escape_string($_POST['email'] ?? '');
    $company = $conn->real_escape_string($_POST['company'] ?? '');
    $phone = $conn->real_escape_string($_POST['phone'] ?? '');
    $message = $conn->real_escape_string($_POST['message'] ?? '');
    $request_type = $conn->real_escape_string($_POST['request_type'] ?? '');

    $sql = "INSERT INTO buy_articles (name, email, company, phone, request_type, message, project)
            VALUES ('$name', '$email', '$company', '$phone', '$request_type', '$message', '$project')";
            
    if (!$conn->query($sql)) {
        http_response_code(500);
        echo json_encode([
            'status' => 'error',
            'message' => 'Failed to save your message: ' . $conn->error
        ]);
        exit;
    }
    
    echo json_encode([
        'status' => 'success',
        'message' => "Thanks, $name. Your request for '$project' was received."
    ]);
    exit;
}

// For non-form submissions or invalid requests
http_response_code(400);
header('Content-Type: application/json');
echo json_encode(['status' => 'error', 'message' => 'Invalid request']);
exit;
?>



// Add this script to your header.php (or to each page if needed)
// It ensures all AJAX requests have the correct X-Requested-With header

<script>
// First, ensure any existing AJAX form submission functions are using this header
function sendFormData(event) {
    event.preventDefault();
    
    // Get form data
    var form = event.target;
    var formData = new FormData(form);
    
    // Create AJAX request
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "../submit.php", true); // Adjust path as needed
    
    // Set the critical X-Requested-With header
    xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    
    xhr.onload = function() {
        if (xhr.status === 200) {
            try {
                var response = JSON.parse(xhr.responseText);
                if (response.status === "success") {
                    // Handle success
                    alert(response.message);
                    form.reset();
                } else {
                    // Handle error
                    alert("Error: " + response.message);
                }
            } catch (e) {
                console.error("Error parsing response:", e);
                alert("An error occurred while processing the form");
            }
        } else {
            alert("Form submission failed with status: " + xhr.status);
        }
    };
    
    xhr.onerror = function() {
        alert("Network error occurred");
    };
    
    xhr.send(formData);
}

// Function to attach this handler to all forms with a specific class
function attachFormHandlers() {
    var forms = document.querySelectorAll('form.ajax-form');
    forms.forEach(function(form) {
        form.addEventListener('submit', sendFormData);
    });
}

// Run when DOM is loaded
document.addEventListener('DOMContentLoaded', attachFormHandlers);
</script>




<!-- Add the ajax-form class to your form in header.php -->
<form id="contactForm" class="ajax-form" method="POST">
    <!-- Your form fields here -->
    <div class="form-group">
        <label for="name">Full Name</label>
        <input type="text" class="form-control" id="name" name="name" required>
    </div>
    <!-- Other form fields -->
    <button type="submit" class="btn btn-primary">Submit</button>
</form>

<!-- Alternatively, if you want to keep your existing onsubmit handlers -->
<!-- Replace your current submission JavaScript with this version -->
<script>
function sendMail(event) {
    event.preventDefault();
    
    // Get form data
    var formData = new FormData(document.getElementById("applicationForm"));
    
    // Create AJAX request
    var xhr = new XMLHttpRequest();
    xhr.open("POST", "../submit.php", true);
    
    // Set the critical X-Requested-With header
    xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    
    xhr.onload = function() {
        if (xhr.status === 200) {
            try {
                var response = JSON.parse(xhr.responseText);
                
                // If the server returns success
                if (response.status === "success") {
                    // Show success message
                    document.getElementById("popup-message").style.display = "block";
                    
                    // Reset form fields
                    document.getElementById("applicationForm").reset();
                    
                    // Additional processing as needed
                    // ...
                } else {
                    alert("Error: " + response.message);
                }
            } catch (e) {
                console.error("Error parsing response:", e);
                alert("An error occurred while processing the form");
            }
        } else {
            alert("Form submission failed with status: " + xhr.status);
        }
    };
    
    xhr.onerror = function() {
        console.log("Network error occurred");
        alert("Network error. Please try again.");
    };
    
    xhr.send(formData);
}
</script>




<?php
// Modified submit.php that works with or without X-Requested-With header
include('../config/db_connection.php');

header("Access-Control-Allow-Origin: *");
header("Access-Control-Allow-Methods: POST, GET, OPTIONS");
header("Access-Control-Allow-Headers: Content-Type, X-Requested-With");

// Check if it's a form submission - focused on POST with project field
if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['project'])) {
    // Always set JSON content type for form submissions
    header('Content-Type: application/json');
    
    // Process the form data
    $project = $conn->real_escape_string($_POST['project']);
    $name = $conn->real_escape_string($_POST['name'] ?? '');
    $email = $conn->real_escape_string($_POST['email'] ?? '');
    $company = $conn->real_escape_string($_POST['company'] ?? '');
    $phone = $conn->real_escape_string($_POST['phone'] ?? '');
    $message = $conn->real_escape_string($_POST['message'] ?? '');
    $request_type = $conn->real_escape_string($_POST['request_type'] ?? '');

    $sql = "INSERT INTO buy_articles (name, email, company, phone, request_type, message, project)
            VALUES ('$name', '$email', '$company', '$phone', '$request_type', '$message', '$project')";
            
    if (!$conn->query($sql)) {
        http_response_code(500);
        echo json_encode([
            'status' => 'error',
            'message' => 'Failed to save your message: ' . $conn->error
        ]);
        exit;
    }
    
    echo json_encode([
        'status' => 'success',
        'message' => "Thanks, $name. Your request for '$project' was received."
    ]);
    exit;
}

// For non-form submissions or invalid requests
http_response_code(400);
header('Content-Type: application/json');
echo json_encode(['status' => 'error', 'message' => 'Invalid request']);
exit;
?>
